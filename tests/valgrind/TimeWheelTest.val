==1395== Memcheck, a memory error detector
==1395== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1395== Using Valgrind-3.12.0.SVN and LibVEX; rerun with -h for copyright info
==1395== Command: ./bin/utest
==1395== 
===============================================================================
All tests passed (8 assertions in 1 test case)

==1395== 
==1395== HEAP SUMMARY:
==1395==     in use at exit: 64 bytes in 2 blocks
==1395==   total heap usage: 1,778 allocs, 1,776 frees, 327,388 bytes allocated
==1395== 
==1395== 32 bytes in 1 blocks are definitely lost in loss record 1 of 2
==1395==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==1395==    by 0x2F082F: ____C_A_T_C_H____T_E_S_T____0() (TimeWheelTest.cc:38)
==1395==    by 0x267525: Catch::TestInvokerAsFunction::invoke() const (catch.hpp:10331)
==1395==    by 0x266C88: Catch::TestCase::invoke() const (catch.hpp:10232)
==1395==    by 0x261D60: Catch::RunContext::invokeActiveTestCase() (catch.hpp:9104)
==1395==    by 0x261ABA: Catch::RunContext::runCurrentTest(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (catch.hpp:9078)
==1395==    by 0x2607BC: Catch::RunContext::runTest(Catch::TestCase const&) (catch.hpp:8861)
==1395==    by 0x263082: Catch::(anonymous namespace)::runTests(std::shared_ptr<Catch::Config> const&) (catch.hpp:9394)
==1395==    by 0x2642C9: Catch::Session::runInternal() (catch.hpp:9592)
==1395==    by 0x26409E: Catch::Session::run() (catch.hpp:9549)
==1395==    by 0x26403E: Catch::Session::run(int, char**) (catch.hpp:9517)
==1395==    by 0x2773F4: main (test.cc:16)
==1395== 
==1395== 32 bytes in 1 blocks are definitely lost in loss record 2 of 2
==1395==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==1395==    by 0x2F0A9F: ____C_A_T_C_H____T_E_S_T____0() (TimeWheelTest.cc:53)
==1395==    by 0x267525: Catch::TestInvokerAsFunction::invoke() const (catch.hpp:10331)
==1395==    by 0x266C88: Catch::TestCase::invoke() const (catch.hpp:10232)
==1395==    by 0x261D60: Catch::RunContext::invokeActiveTestCase() (catch.hpp:9104)
==1395==    by 0x261ABA: Catch::RunContext::runCurrentTest(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (catch.hpp:9078)
==1395==    by 0x2607BC: Catch::RunContext::runTest(Catch::TestCase const&) (catch.hpp:8861)
==1395==    by 0x263082: Catch::(anonymous namespace)::runTests(std::shared_ptr<Catch::Config> const&) (catch.hpp:9394)
==1395==    by 0x2642C9: Catch::Session::runInternal() (catch.hpp:9592)
==1395==    by 0x26409E: Catch::Session::run() (catch.hpp:9549)
==1395==    by 0x26403E: Catch::Session::run(int, char**) (catch.hpp:9517)
==1395==    by 0x2773F4: main (test.cc:16)
==1395== 
==1395== LEAK SUMMARY:
==1395==    definitely lost: 64 bytes in 2 blocks
==1395==    indirectly lost: 0 bytes in 0 blocks
==1395==      possibly lost: 0 bytes in 0 blocks
==1395==    still reachable: 0 bytes in 0 blocks
==1395==         suppressed: 0 bytes in 0 blocks
==1395== 
==1395== For counts of detected and suppressed errors, rerun with: -v
==1395== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
